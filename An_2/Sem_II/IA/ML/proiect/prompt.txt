Scrie in python un AI care citeste datele din unibuc-dhc-2023
cu urmatoarea structura
train_images/* - imaginile de test
train.csv - etichetele imaginilor sub forma:
Image,Class
12953.png,38
02978.png,76

val_images/* - imaginile de verificare
val.csv - etichetele imaginilor de verificare

test_images/* imaginile de test
test.csv numele imaginilor de test in ordinea asteptata

For every sample in the test set, submission files should contain two columns: 
Image and Class. The Image is the file name of an image sample. 
The Class should be the class label, 0 to 95, predicted for the corresponding data sample.
The file should contain a header and have the following format:

Image,Class
16865.png,0
10070.png,0
...

# Starting code:

# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using "Save & Run All" 
# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session


