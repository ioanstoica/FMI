
CREATE TABLE member_ist(
 member_ist_id    NUMBER (10) CONSTRAINT member_ist_id_pk PRIMARY KEY,
 last_name    VARCHAR2(25) CONSTRAINT member_ist_last_nn NOT NULL,
 first_name   VARCHAR2(25),
 address      VARCHAR2(100),
 city         VARCHAR2(30),
 phone        VARCHAR2(25),
 join_date    DATE DEFAULT SYSDATE CONSTRAINT join_date_nn NOT NULL)
;

CREATE TABLE title_ist(
 title_ist_id     NUMBER(10) CONSTRAINT title_ist_id_pk PRIMARY KEY,
 title  VARCHAR2(60) CONSTRAINT title_ist_nn NOT NULL,
 description  VARCHAR2(400) CONSTRAINT title_ist_desc_nn NOT NULL,
 rating       VARCHAR2(4)  CONSTRAINT title_ist_rating_ck 
   CHECK (rating IN ('G','PG','R','NC17','NR')),
 category     VARCHAR2(20) DEFAULT 'DRAMA' 
   CONSTRAINT title_ist_categ_ck 
   CHECK  (category IN ('DRAMA','COMEDY','ACTION','CHILD','SCIFI','DOCUMENTARY')),
 release_date DATE)
;

CREATE TABLE title_copy_ist(
 copy_id      NUMBER(10),
 title_ist_id     NUMBER(10)  CONSTRAINT copy_title_ist_id_fk REFERENCES title_ist(title_ist_id),
 status       VARCHAR2(15) CONSTRAINT copy_status_nn NOT NULL
   CONSTRAINT copy_status_ck 
   CHECK (status IN ('AVAILABLE','DESTROYED','RENTED','RESERVED')),
   CONSTRAINT copy_title_ist_id_pk  PRIMARY KEY(copy_id, title_ist_id))
;

CREATE TABLE rental_ist(
 book_date    DATE DEFAULT SYSDATE,
 copy_id      NUMBER(10),
 member_ist_id    NUMBER(10)   
   CONSTRAINT rental_ist_mbr_id_fk REFERENCES member_ist(member_ist_id),
 title_ist_id NUMBER(10),
 act_ret_date DATE,
 exp_ret_date DATE DEFAULT SYSDATE+2,
 CONSTRAINT rental_ist_copy_title_id_fk FOREIGN KEY (copy_id, title_ist_id)
     REFERENCES title_copy_ist(copy_id,title_ist_id), 
 CONSTRAINT rental_ist_id_pk PRIMARY KEY  (book_date, copy_id, title_ist_id, member_ist_id))
;

CREATE TABLE reservation_ist(
 res_date     DATE,
 member_ist_id    NUMBER(10) CONSTRAINT reservation_ist_mbr_id_fk REFERENCES member_ist(member_ist_id),
 title_ist_id     NUMBER(10) CONSTRAINT reservation_ist_title_ist_id_fk REFERENCES title_ist(title_ist_id),
 CONSTRAINT res_id_pk PRIMARY KEY  (res_date, member_ist_id, title_ist_id))
;

REATE VIEW title_avail_ist 
  AS
    SELECT t.title, c.copy_id, c.status, r.exp_ret_date
    FROM   title_ist t, title_copy_ist c, rental_ist r
    WHERE  t.title_ist_id = c.title_ist_id
    AND	   c.copy_id = r.copy_id (+)
    AND	   c.title_ist_id = r.title_ist_id (+);

-- 4. Scrie-ti o cerinta in limbaj natural care sa se poate rezolva cu un trigger "instead of", care sa modifice comportamentul comenzii INSERT pe title_avail_ist
-- Implementa»õi trigger-ul de tip instead of. 
-- Scrie o comanda de INSERT, care sa apeleze trigerr-ul creat .
